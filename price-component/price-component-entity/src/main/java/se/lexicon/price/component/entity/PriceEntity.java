package se.lexicon.price.component.entity;

import com.gigaspaces.annotation.pojo.SpaceClass;
import com.gigaspaces.annotation.pojo.SpaceId;
import com.gigaspaces.annotation.pojo.SpaceRouting;
import com.so4it.annotation.Allowed;
import com.so4it.common.util.object.Required;
import com.so4it.component.entity.AbstractEntityBuilder;
import com.so4it.component.entity.IdEntity;
import se.lexicon.order.component.domain.Money;

import java.math.BigDecimal;

/**
 *
 * @author Magnus Poromaa {@literal <mailto:magnus.poromaa@so4it.com/>}
 */
@SpaceClass
public class PriceEntity extends IdEntity<String> {

    @Allowed(value = "Auto generated by GS", types = {Allowed.Type.NULLABLE})
    private String id;

    private String instrumentId;

    private Money value;

    private PriceEntity() {
    }

    private PriceEntity(Builder builder) {
        this.id = builder.id;
        this.instrumentId = Required.notNull(builder.instrumentId,"instrumentId",builder.isTemplate());
        this.value = Required.notNull(builder.value,"value",builder.isTemplate());
    }

    @Override
    @SpaceId(autoGenerate = true)
    public String getId() {
        return id;
    }

    private void setId(String id) {
        this.id = id;
    }

    @SpaceRouting
    public String getInstrumentId() {
        return instrumentId;
    }

    private void setInstrumentId(String instrumentId) {
        this.instrumentId = instrumentId;
    }

    public Money getValue() {
        return value;
    }

    private void setValue(Money value) {
        this.value = value;
    }

    public static Builder builder() {
        return new Builder(false);
    }

    public static Builder templateBuilder() {
        return new Builder(true);
    }


    public static class Builder extends AbstractEntityBuilder<PriceEntity> {

        private String id;

        private String instrumentId;

        private Money value;

        public Builder(boolean template) {
            super(template);
        }

        public PriceEntity.Builder withId(String id) {
            this.id = id;
            return this;
        }

        public PriceEntity.Builder withInstrumentId(String instrumentId) {
            this.instrumentId = instrumentId;
            return this;
        }

        public PriceEntity.Builder withValue(Money value) {
            this.value = value;
            return this;
        }


        @Override
        public PriceEntity build() {
            return new PriceEntity(this);
        }
    }
}
